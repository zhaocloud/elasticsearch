/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Default security policy file.
// On startup, BootStrap reads environment and adds additional permissions
// for configured paths to these.

//// Very special jar permissions:
//// These are dangerous permissions that we don't want to grant to everything.

grant codeBase "${es.security.jar.lucene.core}" {
  // needed to allow MMapDirectory's "unmap hack"
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
};

grant codeBase "${es.security.jar.twitter.jsr166e}" {
  // needed for LongAdder etc
  // TODO: remove this in java 8!
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
};

grant codeBase "${es.security.jar.elasticsearch.securemock}" {
  // needed to support creation of mocks
  permission java.lang.RuntimePermission "reflectionFactoryAccess";
};

//// Everything else:

grant {

  // Allow executing groovy scripts with codesource of /groovy/script
  permission groovy.security.GroovyCodeSourcePermission "/groovy/script";

  // Allow connecting to the internet anywhere
  permission java.net.SocketPermission "*", "accept,listen,connect,resolve";

  // Allow read/write to all system properties
  permission java.util.PropertyPermission "*", "read,write";

  // needed by junit4's gson usage 
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // needed by scripting engines, etc
  permission java.lang.RuntimePermission "createClassLoader";

  // needed by lucene SPI currently 
  permission java.lang.RuntimePermission "getClassLoader";

  // needed by GroovyScriptEngineService
  permission java.lang.RuntimePermission "closeClassLoader";

  // needed by Settings
  permission java.lang.RuntimePermission "getenv.*";

  // needed by LuceneTestCase/TestRuleLimitSysouts
  permission java.lang.RuntimePermission "setIO";

  // needed by junit4 ThreadLeakControl
  permission java.lang.RuntimePermission "modifyThread";
  permission java.lang.RuntimePermission "modifyThreadGroup";

  // needed by groovy scripting
  permission java.lang.RuntimePermission "getProtectionDomain";

  // reflection hacks:
  // needed by groovy engine
  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
  
  // needed by RandomizedRunner
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  // needed by RandomizedRunner
  permission java.lang.RuntimePermission "getStackTrace";

  // needed by RandomizedRunner
  permission java.lang.RuntimePermission "setDefaultUncaughtExceptionHandler";

  // needed by JMX instead of getFileSystemAttributes, seems like a bug...
  permission java.lang.RuntimePermission "getFileStoreAttributes";

  // needed by lucene mockfilesystems
  permission java.lang.RuntimePermission "fileSystemProvider";

  // needed by plugin manager to set unix permissions
  permission java.lang.RuntimePermission "accessUserInformation";

  // needed by jvminfo for monitoring the jvm
  permission java.lang.management.ManagementPermission "monitor";

  // needed by JDKESLoggerTests
  permission java.util.logging.LoggingPermission "control";

  // needed to install SSLFactories, advanced SSL configuration, etc.
  permission java.lang.RuntimePermission "setFactory";
  
  // needed to allow installation of bouncycastle crypto provider
  permission java.security.SecurityPermission "putProviderProperty.BC";
};
