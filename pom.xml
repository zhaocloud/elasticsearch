<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<<<<<<< HEAD
    <name>elasticsearch</name>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.elasticsearch</groupId>
    <artifactId>elasticsearch</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>Elasticsearch - Open Source, Distributed, RESTful Search Engine</description>
    <inceptionYear>2009</inceptionYear>
=======
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.elasticsearch</groupId>
    <artifactId>parent</artifactId>
    <version>2.1.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Elasticsearch: Parent POM</name>
    <description>Parent POM</description>
    <inceptionYear>2009</inceptionYear>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

>>>>>>> v2.1.1
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
<<<<<<< HEAD
        <connection>scm:git:git@github.com:elasticsearch/elasticsearch.git</connection>
        <developerConnection>scm:git:git@github.com:elasticsearch/elasticsearch.git</developerConnection>
        <url>http://github.com/elasticsearch/elasticsearch</url>
    </scm>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <properties>
        <lucene.version>4.8.1</lucene.version>
=======
        <connection>scm:git:git@github.com:elastic/elasticsearch.git</connection>
        <developerConnection>scm:git:git@github.com:elastic/elasticsearch.git</developerConnection>
        <url>http://github.com/elastic/elasticsearch</url>
    </scm>

    <properties>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- elasticsearch stack -->
        <elasticsearch.version>${project.version}</elasticsearch.version>
        <jvm.executable>${java.home}${file.separator}bin${file.separator}java</jvm.executable>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- libraries -->
        <lucene.version>5.3.1</lucene.version>
        <lucene.maven.version>5.3.1</lucene.maven.version>
        <testframework.version>2.1.16</testframework.version>
        <jackson.version>2.6.2</jackson.version>
        <slf4j.version>1.6.2</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <jacoco.version>0.7.5.201505241946</jacoco.version>
        <elasticsearch.s3.repository>s3://download.elasticsearch.org/elasticsearch/staging/</elasticsearch.s3.repository>

        <!-- Build resources properties -->
        <elasticsearch.tools.directory>${project.build.directory}/dev-tools</elasticsearch.tools.directory>
        <elasticsearch.license.header>${elasticsearch.tools.directory}/license-check/elasticsearch_license_header.txt</elasticsearch.license.header>
        <elasticsearch.license.headerDefinition>${elasticsearch.tools.directory}/license-check/license_header_definition.xml</elasticsearch.license.headerDefinition>
        <elasticsearch.integ.antfile.default>${elasticsearch.tools.directory}/ant/integration-tests.xml</elasticsearch.integ.antfile.default>
        <elasticsearch.integ.antfile>${elasticsearch.integ.antfile.default}</elasticsearch.integ.antfile>

        <!-- Properties for the license checker -->
        <project.licenses.dir>${project.basedir}/licenses</project.licenses.dir>
        <project.licenses.check_target>${basedir}/target/releases/${project.build.finalName}.zip</project.licenses.check_target>

        <!-- Test properties -->
>>>>>>> v2.1.1
        <tests.jvms>auto</tests.jvms>
        <tests.shuffle>true</tests.shuffle>
        <tests.output>onerror</tests.output>
        <tests.client.ratio></tests.client.ratio>
        <tests.bwc.path>${project.basedir}/backwards</tests.bwc.path>
<<<<<<< HEAD
        <es.logger.level>INFO</es.logger.level>
        <tests.heap.size>512m</tests.heap.size>
        <tests.topn>5</tests.topn>
        <execution.hint.file>.local-${project.version}-execution-hints.log</execution.hint.file>
=======
        <tests.locale>random</tests.locale>
        <tests.timezone>random</tests.timezone>
        <es.logger.level>ERROR</es.logger.level>
        <tests.heap.size>512m</tests.heap.size>
        <tests.heapdump.path>${project.build.directory}/heapdump/</tests.heapdump.path>
        <tests.topn>5</tests.topn>
        <execution.hint.file>.local-${elasticsearch.version}-execution-hints.log</execution.hint.file>
        <execution.hint.integ.file>.local-${elasticsearch.version}-integ-execution-hints.log</execution.hint.integ.file>
        <tests.assertion.disabled>false</tests.assertion.disabled>
        <tests.verbose>false</tests.verbose>
        <tests.seed></tests.seed>
        <tests.bwc></tests.bwc>
        <tests.bwc.path></tests.bwc.path>
        <tests.bwc.version></tests.bwc.version>
        <tests.jvm.argline></tests.jvm.argline>
        <tests.appendseed></tests.appendseed>
        <tests.iters></tests.iters>
        <tests.maxfailures></tests.maxfailures>
        <tests.class></tests.class>
        <tests.method></tests.method>
        <tests.nightly></tests.nightly>
        <tests.badapples></tests.badapples>
        <tests.weekly></tests.weekly>
        <tests.awaitsfix></tests.awaitsfix>
        <tests.timeoutSuite></tests.timeoutSuite>
        <tests.showSuccess></tests.showSuccess>
        <tests.thirdparty></tests.thirdparty>
        <tests.config></tests.config>
        <tests.enable_mock_modules></tests.enable_mock_modules>
        <tests.rest></tests.rest>
        <tests.rest.suite></tests.rest.suite>
        <tests.rest.blacklist></tests.rest.blacklist>
        <tests.rest.spec></tests.rest.spec>
        <tests.rest.load_packaged></tests.rest.load_packaged>
        <tests.network></tests.network>
        <tests.multicast></tests.multicast>
        <tests.cluster></tests.cluster>
        <tests.filter></tests.filter>
        <env.ES_TEST_LOCAL></env.ES_TEST_LOCAL>
        <tests.security.manager>true</tests.security.manager>
        <tests.compatibility></tests.compatibility>
        <tests.ifNoTests>fail</tests.ifNoTests>
        <skip.unit.tests>${skipTests}</skip.unit.tests>
        <skip.integ.tests>${skipTests}</skip.integ.tests>
        <integ.scratch>${project.build.directory}/integ tests</integ.scratch>
        <integ.deps>${project.build.directory}/integ deps</integ.deps>
        <integ.temp>${integ.scratch}/temp</integ.temp>
        <integ.http.port>9400</integ.http.port>
        <integ.transport.port>9500</integ.transport.port>
        <integ.http.port.sec>9600</integ.http.port.sec>
        <integ.transport.port.sec>9700</integ.transport.port.sec>
        <no.commit.pattern>\bno(n|)commit\b</no.commit.pattern>
>>>>>>> v2.1.1
    </properties>

    <repositories>
        <repository>
<<<<<<< HEAD
            <id>Codehaus Snapshots</id>
            <url>http://repository.codehaus.org/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.carrotsearch.randomizedtesting</groupId>
            <artifactId>randomizedtesting-runner</artifactId>
            <version>2.1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
            <version>${lucene.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-codecs</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta-regexp</groupId>
                    <artifactId>jakarta-regexp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-memory</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-highlighter</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta-regexp</groupId>
                    <artifactId>jakarta-regexp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-suggest</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-join</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Lucene spatial, make sure when upgrading to work with latest version of jts/spatial4j dependencies -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-spatial</artifactId>
            <version>${lucene.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.spatial4j</groupId>
            <artifactId>spatial4j</artifactId>
            <version>0.4.1</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
            <version>1.13</version>
            <scope>compile</scope>
            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- needed for templating -->
        <dependency>
            <groupId>com.github.spullara.mustache.java</groupId>
            <artifactId>compiler</artifactId>
            <version>0.8.13</version>
            <optional>true</optional>
        </dependency>
       <!-- Lucene spatial -->


        <!-- START: dependencies that are shaded -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>17.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>hppc</artifactId>
            <version>0.5.3</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <!-- joda 2.0 moved to using volatile fields for datetime -->
            <!-- When updating to a new version, make sure to update our copy of BaseDateTime -->
            <version>2.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
            <version>1.2</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.mvel</groupId>
            <artifactId>mvel2</artifactId>
            <version>2.2.0.Final</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.3.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-smile</artifactId>
            <version>2.3.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.3.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
            <version>2.3.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>3.9.1.Final</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>compress-lzf</artifactId>
            <version>0.9.6</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.tdunning</groupId>
            <artifactId>t-digest</artifactId>
            <version>3.0</version>
            <scope>compile</scope>
        </dependency>
        <!-- END: dependencies that are shaded -->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.3.2</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.2</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>4.1.0</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.fusesource</groupId>
            <artifactId>sigar</artifactId>
            <version>1.6.4</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- We don't use this since the publish pom is then messed up -->
        <!--
        <dependency>
            <groupId>sigar</groupId>
            <artifactId>sigar</artifactId>
            <version>1.6.4</version>
            <scope>system</scope>
            <systemPath>${basedir}/lib/sigar/sigar-1.6.4.jar</systemPath>
            <optional>true</optional>
        </dependency>
        -->
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.json</include>
                    <include>**/*.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${basedir}/src/test/java</directory>
                <includes>
                    <include>**/*.json</include>
                    <include>**/*.yml</include>
                    <include>**/*.txt</include>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/java</directory>
                <includes>
                    <include>**/*.gz</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/rest-api-spec</directory>
                <targetPath>rest-api-spec</targetPath>
                <includes>
                    <include>api/*.json</include>
                    <include>test/**/*.yaml</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[1.7,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <fork>true</fork>
                    <maxmem>512m</maxmem>
                    <!-- REMOVE WHEN UPGRADE:
                         see https://jira.codehaus.org/browse/MCOMPILER-209 it's a bug where
                         incremental compilation doesn't work unless it's set to false causeing
                         recompilation of the entire codebase each time without any changes. Should
                         be fixed in version > 3.1
                     -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <compilerArgs>
                        <arg>-XDignore.symbol.file</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.carrotsearch.randomizedtesting</groupId>
                <artifactId>junit4-maven-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>junit4</goal>
                        </goals>
                        <configuration>
                            <heartbeat>20</heartbeat>
                            <jvmOutputAction>pipe,warn</jvmOutputAction>
                            <leaveTemporary>true</leaveTemporary>
                            <listeners>
                                <report-ant-xml mavenExtensions="true"
                                                dir="${project.build.directory}/surefire-reports"/>
                                <report-text
                                        showThrowable="true"
                                        showStackTraces="true"
                                        showOutput="${tests.output}"
                                        showStatusOk="false"
                                        showStatusError="true"
                                        showStatusFailure="true"
                                        showStatusIgnored="true"
                                        showSuiteSummary="true"
                                        timestamps="false"/>
                                <report-execution-times historyLength="20" file="${basedir}/${execution.hint.file}"/>
                            </listeners>
                            <assertions>
                                <enable/>
                                <disable package="${tests.assertion.disabled}"/>
                                <!-- pass org.elasticsearch to run without assertions -->
                            </assertions>
                            <parallelism>${tests.jvms}</parallelism>
                            <balancers>
                                <execution-times>
                                    <fileset dir="${basedir}" includes="${execution.hint.file}"/>
                                </execution-times>
                            </balancers>
                            <includes>
                                <include>**/*Tests.class</include>
                                <include>**/*Test.class</include>
                            </includes>
                            <excludes>
                                <exclude>**/Abstract*.class</exclude>
                                <exclude>**/*StressTest.class</exclude>
                            </excludes>
                            <jvmArgs>
                                <param>-Xmx${tests.heap.size}</param>
                                <param>-Xms${tests.heap.size}</param>
                                <param>-Xss256k</param>
                                <param>-XX:MaxPermSize=128m</param>
                                <param>-XX:MaxDirectMemorySize=512m</param>
                                <param>-Des.logger.prefix=</param>
                            </jvmArgs>
                            <shuffleOnSlave>${tests.shuffle}</shuffleOnSlave>
                            <sysouts>${tests.verbose}</sysouts>
                            <seed>${tests.seed}</seed>
                            <haltOnFailure>${tests.failfast}</haltOnFailure>
                            <uniqueSuiteNames>false</uniqueSuiteNames>
                            <systemProperties>
                                <java.io.tmpdir>.</java.io.tmpdir> <!-- we use '.' since this is different per JVM-->
                                <!-- RandomizedTesting library system properties -->
                                <tests.bwc>${tests.bwc}</tests.bwc>
                                <tests.bwc.path>${tests.bwc.path}</tests.bwc.path>
                                <tests.bwc.version>${tests.bwc.version}</tests.bwc.version>
                                <tests.jvm.argline>${tests.jvm.argline}</tests.jvm.argline>
                                <tests.processors>${tests.processors}</tests.processors>
                                <tests.appendseed>${tests.appendseed}</tests.appendseed>
                                <tests.iters>${tests.iters}</tests.iters>
                                <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>
                                <tests.failfast>${tests.failfast}</tests.failfast>
                                <tests.class>${tests.class}</tests.class>
                                <tests.method>${tests.method}</tests.method>
                                <tests.nightly>${tests.nightly}</tests.nightly>
                                <tests.verbose>${tests.verbose}</tests.verbose>
                                <tests.badapples>${tests.badapples}</tests.badapples>
                                <tests.weekly>${tests.weekly}</tests.weekly>
                                <tests.slow>${tests.slow}</tests.slow>
                                <tests.awaitsfix>${tests.awaitsfix}</tests.awaitsfix>
                                <tests.slow>${tests.slow}</tests.slow>
                                <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>
                                <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>
                                <tests.integration>${tests.integration}</tests.integration>
                                <tests.client.ratio>${tests.client.ratio}</tests.client.ratio>
                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>
                                <tests.assertion.disabled>${tests.assertion.disabled}</tests.assertion.disabled>
                                <tests.rest>${tests.rest}</tests.rest>
                                <tests.rest.suite>${tests.rest.suite}</tests.rest.suite>
                                <tests.rest.blacklist>${tests.rest.blacklist}</tests.rest.blacklist>
                                <tests.rest.spec>${tests.rest.spec}</tests.rest.spec>
                                <tests.network>${tests.network}</tests.network>
                                <tests.cluster>${tests.cluster}</tests.cluster>
                                <tests.heap.size>${tests.heap.size}</tests.heap.size>
                                <es.node.local>${env.ES_TEST_LOCAL}</es.node.local>
                                <es.node.mode>${es.node.mode}</es.node.mode>
                                <es.logger.level>${es.logger.level}</es.logger.level>
                                <tests.security.manager>${tests.security.manager}</tests.security.manager>
                                <tests.compatibility>${tests.compatibility}</tests.compatibility>
                                <java.awt.headless>true</java.awt.headless>
                                <!-- everything below is for security manager / test.policy -->
                                <junit4.tempDir>${project.build.directory}</junit4.tempDir>
                                <java.security.policy>${basedir}/dev-tools/tests.policy</java.security.policy>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                    <phase>validate</phase>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    <configuration>
                           <target>
                               <echo>Using ${java.runtime.name} ${java.runtime.version} ${java.vendor}</echo>
                           </target>
                    </configuration>
                    </execution>
                    <execution>
                        <id>invalid-patterns</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target unless="${validate.skip}">
                                <pathconvert pathsep="${line.separator}" dirsep="/" property="validate.patternsFound" setonempty="false">
                                    <fileset dir="${basedir}">
                                        <include name="**/*.java"/>
                                        <include name="**/*.py"/>
                                        <include name="**/*.txt"/>
                                        <include name="**/*.xml"/>
                                        <include name="**/*.rb"/>
                                        <include name="**/*.pl"/>
                                        <exclude name="**/org/elasticsearch/cluster/routing/shard_routes.txt"/>
                                        <exclude name="target/**/*"/>
                                        <exclude name=".metadata/**/*"/>
                                        <or>
                                            <containsregexp expression="\bno(n|)commit\b" casesensitive="no"/>
                                            <containsregexp expression="\t" casesensitive="no"/>
                                        </or>
                                    </fileset>
                                    <map from="${basedir}${file.separator}" to="* "/>
                                </pathconvert>
                                <fail if="validate.patternsFound">The following files contain tabs or nocommits:${line.separator}${validate.patternsFound}</fail>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tests</id>
                        <phase>test</phase>
                        <configuration>
                            <skip>${skipTests}</skip> don't run if we skip the tests
                            <failOnError>false</failOnError>
                            <target>
                                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                                <taskdef resource="com/carrotsearch/junit4/antlib.xml">
                                    <classpath>
                                        <pathelement path="${plugin_classpath}"/>
                                        <pathelement path="${runtime_classpath}"/>
                                        <pathelement path="${test_classpath}"/>
                                    </classpath>
                                </taskdef>
                                <tophints max="${tests.topn}">
                                    <file file="${basedir}/${execution.hint.file}" />
                                </tophints>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->
            <plugin>
                <!-- we skip surefire to work with randomized testing above -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>org/elasticsearch/test/**/*</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>
                            </includes>
                            <excludes>
                                <!-- unit tests for yaml suite parser & rest spec parser need to be excluded -->
                                <exclude>org/elasticsearch/test/rest/test/**/*</exclude>
                            </excludes>
                            <!-- Resources are large and not really helpful as "test sources". -->
                            <excludeResources>true</excludeResources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shadeTestJar>true</shadeTestJar>
                    <minimizeJar>true</minimizeJar>
                    <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                    <artifactSet>
                        <includes>
                            <include>com.google.guava:guava</include>
                            <include>com.carrotsearch:hppc</include>
                            <include>org.mvel:mvel2</include>
                            <include>com.fasterxml.jackson.core:jackson-core</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-smile</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-yaml</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</include>
                            <include>joda-time:joda-time</include>
                            <include>org.joda:joda-convert</include>
                            <include>io.netty:netty</include>
                            <include>com.ning:compress-lzf</include>
                            <include>com.github.spullara.mustache.java:compiler</include>
                            <include>com.tdunning:t-digest</include>
                        </includes>
                    </artifactSet>
                    <relocations>
                        <relocation>
                            <pattern>com.google.common</pattern>
                            <shadedPattern>org.elasticsearch.common</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.carrotsearch.hppc</pattern>
                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>jsr166e</pattern>
                            <shadedPattern>org.elasticsearch.common.util.concurrent.jsr166e</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.mvel2</pattern>
                            <shadedPattern>org.elasticsearch.common.mvel2</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.fasterxml.jackson</pattern>
                            <shadedPattern>org.elasticsearch.common.jackson</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.joda</pattern>
                            <shadedPattern>org.elasticsearch.common.joda</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.jboss.netty</pattern>
                            <shadedPattern>org.elasticsearch.common.netty</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.ning.compress</pattern>
                            <shadedPattern>org.elasticsearch.common.compress</shadedPattern>
                        </relocation>
                        <relocation>
                        <pattern>com.github.mustachejava</pattern>
                            <shadedPattern>org.elasticsearch.common.mustache</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.tdunning.math.stats</pattern>
                            <shadedPattern>org.elasticsearch.common.stats</shadedPattern>
                        </relocation>
                    </relocations>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/*</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>build.properties</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/bin</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>*.exe</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${basedir}/bin</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>*.exe</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>${project.build.directory}/releases/</outputDirectory>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assemblies/targz-bin.xml</descriptor>
                        <descriptor>${basedir}/src/main/assemblies/zip-bin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- some infos https://github.com/tcurdt/jdeb/blob/master/docs/maven.md
                -->
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.0.1</version>
                <configuration>
                    <deb>${project.build.directory}/releases/${project.artifactId}-${project.version}.deb</deb>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <dataSet>
                                <data>
                                    <src>${project.basedir}/</src>
                                    <includes>*.txt, *.textile</includes>
                                    <excludes>LICENSE.txt, .DS_Store</excludes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <!-- use the filtered one from the resources plugin -->
                                    <src>${project.build.directory}/bin</src>
                                    <type>directory</type>
                                    <excludes>*.bat, .DS_Store, *.exe</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/bin</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/</src>
                                    <includes>${project.build.finalName}.jar</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/lib/sigar/</src>
                                    <includes>sigar-*.jar, libsigar-*-linux.*</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib/sigar</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/lib</src>
                                    <includes>lucene*, log4j*, jna*, spatial4j*, jts*, groovy*</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/default/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/default</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/init.d/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/init.d</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/config</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/elasticsearch</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/lintian</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/lintian/overrides</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/copyright</src>
                                    <dst>/usr/share/doc/elasticsearch/copyright</dst>
                                    <type>file</type>
                                </data>
                            </dataSet>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-3</version>
                <configuration>
                    <copyright>2013, Elasticsearch</copyright>
                    <distribution>Elasticsearch</distribution>
                    <group>Application/Internet</group>
                    <packager>Elasticsearch</packager>
                    <prefix>/usr</prefix>
                    <changelogFile>src/changelog</changelogFile>
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                        <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                    </defineStatements>
                    <defaultFilemode>644</defaultFilemode>
                    <defaultDirmode>755</defaultDirmode>
                    <defaultUsername>root</defaultUsername>
                    <defaultGroupname>root</defaultGroupname>
                    <mappings>
                        <mapping>
                            <directory>/etc/elasticsearch/</directory>
                            <configuration>noreplace</configuration>
                            <sources>
                                <source>
                                    <location>config/</location>
                                    <includes>
                                        <include>*.yml</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/sysconfig/</directory>
                            <configuration>noreplace</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/sysconfig</location>
                                    <includes>
                                        <include>elasticsearch</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/rc.d/init.d/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/init.d/elasticsearch</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/systemd/system/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd</location>
                                    <includes>
                                        <include>elasticsearch.service</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/sysctl.d/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd/sysctl.d</location>
                                    <includes>
                                        <include>elasticsearch.conf</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/tmpfiles.d/</directory>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd/</location>
                                    <includes>
                                        <include>elasticsearch.conf</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/run/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/log/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/bin/</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>target/bin</location>
                                    <includes>
                                        <include>elasticsearch</include>
                                        <include>elasticsearch.in.sh</include>
                                        <include>plugin</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/lib</directory>
                            <sources>
                                <source>
                                    <location>target/lib/</location>
                                    <includes>
                                        <include>lucene*</include>
                                        <include>log4j*</include>
                                        <include>jna*</include>
                                        <include>spatial4j*</include>
                                        <include>jts*</include>
                                        <include>groovy*</include>
                                    </includes>
                                </source>
                                <source>
                                    <location>${project.build.directory}/</location>
                                    <includes>
                                        <include>${project.build.finalName}.jar</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/lib/sigar</directory>
                            <sources>
                                <source>
                                    <location>lib/sigar</location>
                                    <includes>
                                        <include>sigar*.jar</include>
                                        <include>libsigar-*-linux.*</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/</directory>
                            <sources>
                                <source>
                                    <location>.</location>
                                    <includes>
                                        <include>LICENSE.txt</include>
                                        <include>NOTICE.txt</include>
                                        <include>README.textile</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <scriptFile>src/rpm/scripts/preinstall</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <scriptFile>src/rpm/scripts/postinstall</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>src/rpm/scripts/preremove</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>src/rpm/scripts/postremove</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postremoveScriptlet>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
                <version>1.5.1</version>

                <executions>
                    <execution>
                        <id>check-forbidden-apis</id>
                        <configuration>
                            <targetVersion>1.7</targetVersion>
                            <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                            <internalRuntimeForbidden>true</internalRuntimeForbidden>
                            <!-- if the used Java version is too new, don't fail, just do nothing: -->
                            <failOnUnsupportedJava>false</failOnUnsupportedJava>
                            <excludes>
                                <exclude>jsr166e/**</exclude>
                                <!-- start excludes for valid system-out -->
                                <exclude>org/elasticsearch/common/logging/log4j/ConsoleAppender*</exclude>
                                <exclude>org/elasticsearch/plugins/PluginManager.class</exclude>
                                <exclude>org/elasticsearch/bootstrap/Bootstrap.class</exclude>
                                <exclude>org/elasticsearch/Version.class</exclude>
                                <exclude>org/elasticsearch/common/lucene/search/Queries$QueryWrapperFilterFactory.class</exclude>
                                <!-- end excludes for valid system-out -->
                                <!-- start excludes for Unsafe -->
                                <exclude>org/elasticsearch/common/util/UnsafeUtils.class</exclude>
                                <!-- end excludes for Unsafe -->
                                <!-- start excludes for Math.abs -->
                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>
                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>
                                <exclude>org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.class</exclude>
                                <!-- end excludes for Math.abs -->
                                <!-- start exclude for FilteredQuery -->
                                <exclude>org/elasticsearch/common/lucene/search/XFilteredQuery.class</exclude>
                                <!-- end exclude for FilteredQuery -->
                            </excludes>
                            <bundledSignatures>
                                <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                <bundledSignature>jdk-unsafe</bundledSignature>
                                <bundledSignature>jdk-deprecated</bundledSignature>
                                <bundledSignature>jdk-system-out</bundledSignature>
                            </bundledSignatures>
                            <signaturesFiles>
                                <signaturesFile>core-signatures.txt</signaturesFile>
                                <signaturesFile>all-signatures.txt</signaturesFile>
                            </signaturesFiles>
                            <signatures>${forbidden.signatures}</signatures>
                        </configuration>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check-forbidden-test-apis</id>
                        <configuration>
                            <targetVersion>1.7</targetVersion>
                            <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                            <internalRuntimeForbidden>true</internalRuntimeForbidden>
                            <!-- if the used Java version is too new, don't fail, just do nothing: -->
                            <failOnUnsupportedJava>false</failOnUnsupportedJava>
                            <bundledSignatures>
                                <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                <bundledSignature>jdk-unsafe</bundledSignature>
                                <bundledSignature>jdk-deprecated</bundledSignature>
                            </bundledSignatures>
                            <signaturesFiles>
                                <signaturesFile>test-signatures.txt</signaturesFile>
                                <signaturesFile>all-signatures.txt</signaturesFile>
                            </signaturesFiles>
                            <signatures>${forbidden.test.signatures}</signatures>
                        </configuration>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCheck</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>org/elasticsearch/test/**/*</include>
                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>
                            </includes>
                            <excludes>
                                <!-- unit tests for yaml suite parser & rest spec parser need to be excluded -->
                                <exclude>org/elasticsearch/test/rest/test/**/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- make m2e stfu -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <!-- copy-dependency plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                                <!-- forbidden-apis plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>de.thetaphi</groupId>
                                        <artifactId>forbiddenapis</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>testCheck</goal>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                                <!-- exec-maven plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>exec</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                                <!-- copy-dependency plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-enforcer-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>enforce</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <buildOutputDirectory>eclipse-build</buildOutputDirectory>
=======
            <id>elasticsearch-releases</id>
            <url>http://maven.elasticsearch.org/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>oss-snapshots</id>
            <name>Sonatype OSS Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>dev-tools</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>com.carrotsearch.randomizedtesting</groupId>
                <artifactId>randomizedtesting-runner</artifactId>
                <version>${testframework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.3</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
            </dependency>

            <dependency>
                <groupId>com.google.jimfs</groupId>
                <artifactId>jimfs</artifactId>
                <version>1.0</version>
            </dependency>

            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>jsr166e</artifactId>
                <version>1.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-test-framework</artifactId>
                <version>${lucene.maven.version}</version>
                <!-- we specify our own junit4 version -->
                <exclusions>
                    <exclusion>
                        <groupId>com.carrotsearch.randomizedtesting</groupId>
                        <artifactId>junit4-ant</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.3.6</version>
            </dependency>

            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-backward-codecs</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queries</artifactId>
                <version>${lucene.maven.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jakarta-regexp</groupId>
                        <artifactId>jakarta-regexp</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-memory</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-highlighter</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queryparser</artifactId>
                <version>${lucene.maven.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jakarta-regexp</groupId>
                        <artifactId>jakarta-regexp</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-suggest</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-join</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <!-- Lucene spatial, make sure when upgrading to work with latest version of jts/spatial4j dependencies -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-spatial</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-expressions</artifactId>
                <version>${lucene.maven.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.spatial4j</groupId>
                <artifactId>spatial4j</artifactId>
                <version>0.5</version>
            </dependency>
            <dependency>
                <groupId>com.vividsolutions</groupId>
                <artifactId>jts</artifactId>
                <version>1.13</version>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- needed for templating -->
            <dependency>
                <groupId>com.github.spullara.mustache.java</groupId>
                <artifactId>compiler</artifactId>
                <version>0.8.13</version>
            </dependency>

            <!-- Used in plugins -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-phonetic</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-kuromoji</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-stempel</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-icu</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-smartcn</artifactId>
                <version>${lucene.maven.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>18.0</version>
            </dependency>

            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>0.7.1</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <!-- joda 2.0 moved to using volatile fields for datetime -->
                <!-- When updating to a new version, make sure to update our copy of BaseDateTime -->
                <version>2.8.2</version>
            </dependency>
            <dependency>
                <groupId>org.joda</groupId>
                <artifactId>joda-convert</artifactId>
                <version>1.2</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-smile</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty</artifactId>
                <version>3.10.5.Final</version>
            </dependency>

            <dependency>
                <groupId>com.ning</groupId>
                <artifactId>compress-lzf</artifactId>
                <version>1.0.2</version>
            </dependency>

            <dependency>
                <groupId>com.tdunning</groupId>
                <artifactId>t-digest</artifactId>
                <version>3.0</version>
            </dependency>

            <dependency>
                <groupId>org.hdrhistogram</groupId>
                <artifactId>HdrHistogram</artifactId>
                <version>2.1.6</version>
            </dependency>

            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.3.1</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>2.4.4</version>
                <classifier>indy</classifier>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>apache-log4j-extras</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>4.1.0</version>
                <optional>true</optional>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
          <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>com.carrotsearch.randomizedtesting</groupId>
                    <artifactId>junit4-maven-plugin</artifactId>
                </plugin>
                <!-- we only use failsafe's "verify" right now -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                </plugin>
            </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[${maven.compiler.source},)</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-maven-version</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>[3.1.0,)</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>print-versions</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>display-info</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>enforce-java-home-is-set</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireEnvironmentVariable>
                                        <variableName>JAVA_HOME</variableName>
                                        <message>"JAVA_HOME must be set and point to the jdk to run the tests"</message>
                                    </requireEnvironmentVariable>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <fork>true</fork>
                        <maxmem>512m</maxmem>
                        <!-- REMOVE WHEN UPGRADE:
                             see https://jira.codehaus.org/browse/MCOMPILER-209 it's a bug where
                             incremental compilation doesn't work unless it's set to false causeing
                             recompilation of the entire codebase each time without any changes. Should
                             be fixed in version > 3.1
                         -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <compilerArgs>
                            <arg>-XDignore.symbol.file</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.carrotsearch.randomizedtesting</groupId>
                    <artifactId>junit4-maven-plugin</artifactId>
                    <version>${testframework.version}</version>
                    <!-- general test configuration, used for both unit and integ tests -->
                    <configuration>
                        <jvm>${jvm.executable}</jvm>
                        <argLine>${tests.jvm.argline}</argLine>
                        <heartbeat>10</heartbeat>
                        <jvmOutputAction>warn</jvmOutputAction>
                        <leaveTemporary>true</leaveTemporary>
                        <parallelism>${tests.jvms}</parallelism>
                        <!-- System assertions (-esa) are disabled for now because of what looks like a
                             JDK bug triggered by Groovy on JDK7. We should look at re-enabling system
                             assertions when we upgrade to a new version of Groovy (currently 2.4.4) or
                             require JDK8. See https://issues.apache.org/jira/browse/GROOVY-7528.
                        -->
                        <assertions enableSystemAssertions="false">
                            <enable/>
                            <disable package="${tests.assertion.disabled}"/>
                            <!-- pass org.elasticsearch to run without assertions -->
                        </assertions>
                        <jvmArgs>
                            <param>-Xmx${tests.heap.size}</param>
                            <param>-Xms${tests.heap.size}</param>
                            <param>${java.permGenSpace}</param>
                            <param>-XX:MaxDirectMemorySize=512m</param>
                            <param>-Des.logger.prefix=</param>
                            <param>-XX:+HeapDumpOnOutOfMemoryError</param>
                            <param>-XX:HeapDumpPath=${tests.heapdump.path}</param>
                        </jvmArgs>
                        <shuffleOnSlave>${tests.shuffle}</shuffleOnSlave>
                        <sysouts>${tests.verbose}</sysouts>
                        <seed>${tests.seed}</seed>
                        <!-- enforce unique suite names, or reporting stuff can be screwed up -->
                        <uniqueSuiteNames>true</uniqueSuiteNames>
                        <systemProperties>
                            <!-- we use './temp' since this is per JVM and tests are forbidden from writing to CWD -->
                            <java.io.tmpdir>./temp</java.io.tmpdir>
                            <!-- RandomizedTesting library system properties -->
                            <tests.bwc>${tests.bwc}</tests.bwc>
                            <tests.bwc.path>${tests.bwc.path}</tests.bwc.path>
                            <tests.bwc.version>${tests.bwc.version}</tests.bwc.version>
                            <tests.jvm.argline>${tests.jvm.argline}</tests.jvm.argline>
                            <tests.appendseed>${tests.appendseed}</tests.appendseed>
                            <tests.cluster>${tests.cluster}</tests.cluster>
                            <tests.iters>${tests.iters}</tests.iters>
                            <tests.project>${project.groupId}:${project.artifactId}</tests.project>
                            <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>
                            <tests.failfast>${tests.failfast}</tests.failfast>
                            <tests.class>${tests.class}</tests.class>
                            <tests.method>${tests.method}</tests.method>
                            <tests.nightly>${tests.nightly}</tests.nightly>
                            <tests.verbose>${tests.verbose}</tests.verbose>
                            <tests.badapples>${tests.badapples}</tests.badapples>
                            <tests.weekly>${tests.weekly}</tests.weekly>
                            <haltOnFailure>${tests.failfast}</haltOnFailure>
                            <tests.awaitsfix>${tests.awaitsfix}</tests.awaitsfix>
                            <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>
                            <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>
                            <tests.thirdparty>${tests.thirdparty}</tests.thirdparty>
                            <tests.config>${tests.config}</tests.config>
                            <tests.coverage>${tests.coverage}</tests.coverage>
                            <tests.coverage.dir>${project.build.directory}</tests.coverage.dir>
                            <tests.client.ratio>${tests.client.ratio}</tests.client.ratio>
                            <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>
                            <tests.assertion.disabled>${tests.assertion.disabled}</tests.assertion.disabled>
                            <tests.rest>${tests.rest}</tests.rest>
                            <tests.rest.suite>${tests.rest.suite}</tests.rest.suite>
                            <tests.rest.blacklist>${tests.rest.blacklist}</tests.rest.blacklist>
                            <tests.rest.spec>${tests.rest.spec}</tests.rest.spec>
                            <tests.network>${tests.network}</tests.network>
                            <tests.heap.size>${tests.heap.size}</tests.heap.size>
                            <tests.filter>${tests.filter}</tests.filter>
                            <tests.version>${elasticsearch.version}</tests.version>
                            <tests.locale>${tests.locale}</tests.locale>
                            <tests.rest.load_packaged>${tests.rest.load_packaged}</tests.rest.load_packaged>
                            <tests.timezone>${tests.timezone}</tests.timezone>
                            <es.node.local>${env.ES_TEST_LOCAL}</es.node.local>
                            <es.node.mode>${es.node.mode}</es.node.mode>
                            <es.logger.level>${es.logger.level}</es.logger.level>
                            <tests.security.manager>${tests.security.manager}</tests.security.manager>
                            <tests.compatibility>${tests.compatibility}</tests.compatibility>
                            <java.awt.headless>true</java.awt.headless>
                            <!-- true if we are running tests from maven (as opposed to IDE, etc).
                                 allows us to assert certain things work, like libsigar -->
                            <tests.maven>true</tests.maven>
                        </systemProperties>
                        <listeners>
                            <report-text
                                    showThrowable="true"
                                    showStackTraces="true"
                                    showOutput="${tests.output}"
                                    showStatusOk="false"
                                    showStatusError="true"
                                    showStatusFailure="true"
                                    showStatusIgnored="true"
                                    showSuiteSummary="true"
                                    showNumFailures="30"
                                    timestamps="false">
                                <filtertrace>
                                    <!-- custom filters: we carefully only omit test infra noise here -->
                                    <containsstring contains=".SlaveMain." />
                                    <containsregex pattern="^(\s+at )(org\.junit\.)" />
                                    <!-- also includes anonymous classes inside these two: -->
                                    <containsregex pattern="^(\s+at )(com\.carrotsearch\.randomizedtesting.RandomizedRunner)" />
                                    <containsregex pattern="^(\s+at )(com\.carrotsearch\.randomizedtesting.ThreadLeakControl)" />
                                    <containsregex pattern="^(\s+at )(com\.carrotsearch\.randomizedtesting.rules\.)" />
                                    <containsregex pattern="^(\s+at )(org\.apache\.lucene.util\.TestRule)" />
                                    <containsregex pattern="^(\s+at )(org\.apache\.lucene.util\.AbstractBeforeAfterRule)" />
                                </filtertrace>
                            </report-text>
                        </listeners>
                    </configuration>
                    <executions>
                        <execution>
                            <id>tests</id>
                            <phase>test</phase>
                            <goals>
                                <goal>junit4</goal>
                            </goals>
                            <configuration>
                                <ifNoTests>${tests.ifNoTests}</ifNoTests>
                                <skipTests>${skip.unit.tests}</skipTests>
                                <listeners>
                                    <report-ant-xml mavenExtensions="true"
                                                    dir="${project.build.directory}/surefire-reports"/>
                                    <report-execution-times historyLength="20"
                                                            file="${basedir}/${execution.hint.file}"/>
                                </listeners>
                                <balancers>
                                    <execution-times>
                                        <fileset dir="${basedir}" includes="${execution.hint.file}"/>
                                    </execution-times>
                                </balancers>
                                <includes>
                                    <include>**/*Tests.class</include>
                                </includes>
                                <excludes>
                                    <exclude>**/*$*.class</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>integ-tests</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>junit4</goal>
                            </goals>
                            <configuration>
                                <ifNoTests>warn</ifNoTests>
                                <haltOnFailure>false</haltOnFailure>
                                <skipTests>${skip.integ.tests}</skipTests>
                                <listeners>
                                    <report-ant-xml
                                        mavenExtensions="true"
                                        summaryFile="${project.build.directory}/failsafe-reports/failsafe-summary.xml"
                                        dir="${project.build.directory}/failsafe-reports"/>
                                    <report-execution-times historyLength="20"
                                                            file="${basedir}/${execution.hint.integ.file}"/>
                                </listeners>
                                <balancers>
                                    <execution-times>
                                        <fileset dir="${basedir}" includes="${execution.hint.integ.file}"/>
                                    </execution-times>
                                </balancers>
                                <includes>
                                    <include>**/*IT.class</include>
                                </includes>
                                <systemProperties>
                                    <!-- let framework know we are running integ tests, for correct 'reproduce with' line -->
                                    <tests.verify.phase>true</tests.verify.phase>
                                </systemProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- disable surefire, we use junit4 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.18.1</version>
                    <configuration>
                        <skip>${skip.integ.tests}</skip>
                        <failIfNoTests>true</failIfNoTests>
                    </configuration>
                    <executions>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>1.5</version>
                    <configuration>
                        <resourceBundles>
                            <resourceBundle>org.elasticsearch:dev-tools:${elasticsearch.version}</resourceBundle>
                            <resourceBundle>org.elasticsearch:rest-api-spec:${elasticsearch.version}</resourceBundle>
                        </resourceBundles>
                        <outputDirectory>${elasticsearch.tools.directory}</outputDirectory>
                        <!-- don't include dev-tools in artifacts -->
                        <attachToMain>false</attachToMain>
                        <attachToTest>false</attachToTest>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>process</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <version>2.0</version>

                    <executions>
                        <execution>
                            <id>check-forbidden-apis</id>
                                <configuration>
                                     <targetVersion>${maven.compiler.target}</targetVersion>
                                     <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                                     <internalRuntimeForbidden>true</internalRuntimeForbidden>
                                     <!-- if the used Java version is too new, don't fail, just do nothing: -->
                                     <failOnUnsupportedJava>false</failOnUnsupportedJava>
                                     <bundledSignatures>
                                         <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                         <bundledSignature>jdk-unsafe</bundledSignature>
                                         <bundledSignature>jdk-deprecated</bundledSignature>
                                         <bundledSignature>jdk-system-out</bundledSignature>
                                     </bundledSignatures>
                                     <signaturesFiles>
                                          <signaturesFile>${elasticsearch.tools.directory}/forbidden/core-signatures.txt</signaturesFile>
                                          <signaturesFile>${elasticsearch.tools.directory}/forbidden/all-signatures.txt</signaturesFile>
                                          <signaturesFile>${elasticsearch.tools.directory}/forbidden/third-party-signatures.txt</signaturesFile>
                                     </signaturesFiles>
                                     <signatures>${forbidden.signatures}</signatures>
                                     <suppressAnnotations><annotation>**.SuppressForbidden</annotation></suppressAnnotations>
                                 </configuration>
                             <phase>compile</phase>
                             <goals>
                                 <goal>check</goal>
                             </goals>
                         </execution>
                         <execution>
                             <id>check-forbidden-test-apis</id>
                             <configuration>
                                 <targetVersion>${maven.compiler.target}</targetVersion>
                                 <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                                 <internalRuntimeForbidden>true</internalRuntimeForbidden>
                                 <!-- if the used Java version is too new, don't fail, just do nothing: -->
                                 <failOnUnsupportedJava>false</failOnUnsupportedJava>
                                 <bundledSignatures>
                                     <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                     <bundledSignature>jdk-unsafe</bundledSignature>
                                     <bundledSignature>jdk-deprecated</bundledSignature>
                                 </bundledSignatures>
                                 <signaturesFiles>
                                     <signaturesFile>${elasticsearch.tools.directory}/forbidden/test-signatures.txt</signaturesFile>
                                     <signaturesFile>${elasticsearch.tools.directory}/forbidden/all-signatures.txt</signaturesFile>
                                 </signaturesFiles>
                                 <signatures>${forbidden.test.signatures}</signatures>
                                 <suppressAnnotations><annotation>**.SuppressForbidden</annotation></suppressAnnotations>
                             </configuration>
                             <phase>test-compile</phase>
                             <goals>
                                 <goal>testCheck</goal>
                             </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <!-- add some additional binary types to prevent maven from
                         screwing them up with resource filtering  -->
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.4</version>
                    <configuration>
                        <siteDirectory>${elasticsearch.tools.directory}/site</siteDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.3</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <!-- some infos https://github.com/tcurdt/jdeb/blob/master/docs/maven.md -->
                    <groupId>org.vafer</groupId>
                    <artifactId>jdeb</artifactId>
                    <version>1.4</version>
                    <extensions>true</extensions>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>2.1.3</version>
                    <extensions>true</extensions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <X-Build-Branch>${scmBranch}</X-Build-Branch>
                                <X-Build-Number>${buildNumber}</X-Build-Number>
                                <X-Build-Time>${timestamp}</X-Build-Time>
                                <X-Compile-Elasticsearch-Version>${elasticsearch.version}</X-Compile-Elasticsearch-Version>
                                <X-Compile-Lucene-Version>${lucene.version}</X-Compile-Lucene-Version>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <header>${elasticsearch.license.header}</header>
                        <headerDefinitions>
                            <headerDefinition>${elasticsearch.license.headerDefinition}</headerDefinition>
                        </headerDefinitions>
                        <includes>
                            <include>src/**/*.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check-license-headers</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                     </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.10</version>
                    <configuration>
                        <buildOutputDirectory>eclipse-build</buildOutputDirectory>
                        <downloadSources>true</downloadSources>
                        <additionalConfig>
                            <file>
                                <name>.settings/org.eclipse.core.resources.prefs</name>
                                <content>
                               <![CDATA[eclipse.preferences.version=1
encoding//src/main/java=UTF-8
encoding//src/main/resources=UTF-8
encoding//src/test/java=UTF-8
encoding//src/test/resources=UTF-8
encoding/<project>=UTF-8
]]>
                                </content>
                            </file>
                            <file>
                                <name>.settings/org.eclipse.jdt.core.prefs</name>
                                <content>
                               <![CDATA[eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=enabled
org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
org.eclipse.jdt.core.compiler.annotation.nullable=org.elasticsearch.common.Nullable
org.eclipse.jdt.core.compiler.annotation.nullanalysis=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
org.eclipse.jdt.core.compiler.compliance=1.7
org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=warning
org.eclipse.jdt.core.compiler.problem.nullReference=warning
org.eclipse.jdt.core.compiler.problem.nullSpecViolation=warning
org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
org.eclipse.jdt.core.compiler.problem.potentialNullReference=warning
org.eclipse.jdt.core.compiler.source=1.7
org.eclipse.jdt.core.formatter.lineSplit=140
org.eclipse.jdt.core.formatter.tabulation.char=space
org.eclipse.jdt.core.formatter.tabulation.size=4
]]>
                                </content>
                            </file>
                            <file>
                                <name>.settings/org.eclipse.jdt.ui.prefs</name>
                                <content>
                               <![CDATA[eclipse.preferences.version=1
formatter_settings_version=12
# Intellij IDEA import order
org.eclipse.jdt.ui.importorder=;com;org;java;javax;\#;
# License header
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="gettercomment_context" deleted\="false" description\="Comment for getter method" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.gettercomment" name\="gettercomment">/**\n *\n */</template><template autoinsert\="false" context\="settercomment_context" deleted\="false" description\="Comment for setter method" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.settercomment" name\="settercomment">/**\n *\n */</template><template autoinsert\="true" context\="constructorcomment_context" deleted\="false" description\="Comment for created constructors" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.constructorcomment" name\="constructorcomment">/**\n * ${tags}\n */</template><template autoinsert\="true" context\="filecomment_context" deleted\="false" description\="Comment for created Java files" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.filecomment" name\="filecomment">/**\n *\n */</template><template autoinsert\="false" context\="typecomment_context" deleted\="false" description\="Comment for created types" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.typecomment" name\="typecomment">/**\n *\n */</template><template autoinsert\="true" context\="fieldcomment_context" deleted\="false" description\="Comment for fields" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.fieldcomment" name\="fieldcomment">/**\n *\n */</template><template autoinsert\="true" context\="methodcomment_context" deleted\="false" description\="Comment for non-overriding methods" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.methodcomment" name\="methodcomment">/**\n * ${tags}\n */</template><template autoinsert\="false" context\="overridecomment_context" deleted\="false" description\="Comment for overriding methods" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.overridecomment" name\="overridecomment">/*\n *\n */</template><template autoinsert\="true" context\="delegatecomment_context" deleted\="false" description\="Comment for delegate methods" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.delegatecomment" name\="delegatecomment">/**\n * ${tags}\n * ${see_to_target}\n */</template><template autoinsert\="false" context\="newtype_context" deleted\="false" description\="Newly created files" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.newtype" name\="newtype">${filecomment}\n/*\n * Licensed to Elasticsearch under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch licenses this file to you under\n * the Apache License, Version 2.0 (the "License"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n${package_declaration}\n\n${typecomment}\n${type_declaration}</template><template autoinsert\="true" context\="classbody_context" deleted\="false" description\="Code in new class type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.classbody" name\="classbody">\n</template><template autoinsert\="true" context\="interfacebody_context" deleted\="false" description\="Code in new interface type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.interfacebody" name\="interfacebody">\n</template><template autoinsert\="true" context\="enumbody_context" deleted\="false" description\="Code in new enum type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.enumbody" name\="enumbody">\n</template><template autoinsert\="true" context\="annotationbody_context" deleted\="false" description\="Code in new annotation type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.annotationbody" name\="annotationbody">\n</template><template autoinsert\="false" context\="catchblock_context" deleted\="false" description\="Code in new catch blocks" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.catchblock" name\="catchblock">throw new RuntimeException();</template><template autoinsert\="false" context\="methodbody_context" deleted\="false" description\="Code in created method stubs" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.methodbody" name\="methodbody">${body_statement}</template><template autoinsert\="false" context\="constructorbody_context" deleted\="false" description\="Code in created constructor stubs" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.constructorbody" name\="constructorbody">${body_statement}</template><template autoinsert\="true" context\="getterbody_context" deleted\="false" description\="Code in created getters" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.getterbody" name\="getterbody">return ${field};</template><template autoinsert\="true" context\="setterbody_context" deleted\="false" description\="Code in created setters" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.setterbody" name\="setterbody">${field} \= ${param};</template></templates>
]]>
                                </content>
                            </file>
                        </additionalConfig>
                    </configuration>
                </plugin>

                <!-- Quality plugins (was static plugins) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.5</version>
                    <configuration>
                        <rulesets>
                            <ruleset>${elasticsearch.tools.directory}/pmd/custom.xml</ruleset>
                        </rulesets>
                        <targetJdk>${maven.compiler.target}</targetJdk>
                     </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <xmlOutput>true</xmlOutput>
                        <xmlOutputDirectory>target/site</xmlOutputDirectory>
                        <fork>true</fork>
                        <maxHeap>2048</maxHeap>
                        <timeout>1800000</timeout>
                        <onlyAnalyze>org.elasticsearch.-</onlyAnalyze>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>set-permgen</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <!-- if we are on java 1.7.* we set perm gen space since some tests need it otherwise we just inject a dummy value -->
                                    <condition property="java.permGenSpace" value="-XX:MaxPermSize=128m" else="-Dsome.dummy.value=" >
                                        <matches pattern="1\.7\..+$" string="${java.runtime.version}" />
                                    </condition>
                                </target>
                                <exportAntProperties>true</exportAntProperties>
                            </configuration>
                        </execution>
                        <execution>
                            <id>check-invalid-patterns</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target unless="${validate.skip}">
                                    <pathconvert pathsep="${line.separator}" dirsep="/" property="validate.patternsFound" setonempty="false">
                                        <fileset dir="${basedir}">
                                            <include name="**/*.java"/>
                                            <include name="**/*.py"/>
                                            <include name="**/*.txt"/>
                                            <include name="**/*.xml"/>
                                            <include name="**/*.rb"/>
                                            <include name="**/*.pl"/>
                                            <exclude name="**/org/elasticsearch/cluster/routing/shard_routes.txt"/>
                                            <exclude name="**/build/**/*"/>
                                            <exclude name="**/target/**/*"/>
                                            <exclude name="**/.metadata/**/*"/>
                                            <exclude name="**/.idea/**/*"/>
                                            <exclude name="**/eclipse-build/**/*"/>
                                            <or>
                                                <containsregexp expression="\t" casesensitive="no"/>
                                                <containsregexp expression="${no.commit.pattern}" casesensitive="no"/>
                                            </or>
                                        </fileset>
                                        <map from="${basedir}${file.separator}" to="* "/>
                                    </pathconvert>
                                    <fail if="validate.patternsFound">The following files contain tabs or
                                        nocommits:${line.separator}${validate.patternsFound}
                                    </fail>
                                </target>
                            </configuration>
                        </execution>
                        <execution>
                            <phase>generate-test-resources</phase>
                            <id>create-heapdump-directory</id>
                            <configuration>
                                <target>
                                    <echo taskname="heapdump" message="Creating heapdump directory"/>
                                    <mkdir dir="${tests.heapdump.path}"/>
                                </target>
                            </configuration>
                            <goals>
                                 <goal>run</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>tests-top-hints</id>
                            <phase>test</phase>
                            <configuration>
                                <skip>${skip.unit.tests}</skip>
                                <target>
                                    <taskdef resource="com/carrotsearch/junit4/antlib.xml" classpathref="maven.plugin.classpath"/>
                                    <tophints max="${tests.topn}">
                                        <fileset dir="${basedir}" includes="${execution.hint.file}"/>
                                    </tophints>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>integ-tests-top-hints</id>
                            <phase>integration-test</phase>
                            <configuration>
                                <skip>${skip.integ.tests}</skip>
                                <target>
                                    <taskdef resource="com/carrotsearch/junit4/antlib.xml" classpathref="maven.plugin.classpath"/>
                                    <tophints max="${tests.topn}">
                                        <fileset dir="${basedir}" includes="${execution.hint.integ.file}"/>
                                    </tophints>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>check-license</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <skip>${skip.integ.tests}</skip>
                                <target>
                                    <echo taskName="license check">Running license check</echo>
                                    <!-- don't run on windows, because everyone hates it -->
                                    <exec failonerror="true" executable="perl" osfamily="unix"
                                          dir="${elasticsearch.tools.directory}/license-check">
                                        <arg value="check_license_and_sha.pl"/>
                                        <arg value="--check"/>
                                        <arg value="${project.licenses.dir}"/>
                                        <arg value="${project.licenses.check_target}"/>
                                        <arg value="${project.build.finalName}"/>
                                    </exec>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.carrotsearch.randomizedtesting</groupId>
                            <artifactId>junit4-ant</artifactId>
                            <version>${testframework.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                </plugin>
                <plugin>
                    <!-- We just declare which plugin version to use. Each project can have then its own settings -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-verifier-plugin</artifactId>
                    <version>1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.15</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                        <createChecksum>true</createChecksum>
>>>>>>> v2.1.1
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
<<<<<<< HEAD
      <!-- default profile, with randomization setting kicks in -->
      <profile>
        <id>default</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
        <build>
          <plugins>
            <plugin>
              <groupId>com.carrotsearch.randomizedtesting</groupId>
              <artifactId>junit4-maven-plugin</artifactId>
              <configuration>
                <argLine>${tests.jvm.argline}</argLine>
              </configuration>
            </plugin>
            <plugin>
              <groupId>com.mycila</groupId>
              <artifactId>license-maven-plugin</artifactId>
              <version>2.5</version>
              <configuration>
                <header>dev-tools/elasticsearch_license_header.txt</header>
                <headerDefinitions>
                  <headerDefinition>dev-tools/license_header_definition.xml</headerDefinition>
                </headerDefinitions>
                <includes>
                  <include>src/main/java/org/elasticsearch/**/*.java</include>
                  <include>src/test/java/org/elasticsearch/**/*.java</include>
                </includes>
                <excludes>
                  <exclude>src/main/java/org/elasticsearch/common/inject/**</exclude>
                  <!-- Guice -->
                  <exclude>src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java</exclude>
                  <exclude>src/main/java/org/elasticsearch/common/lucene/search/XBooleanFilter.java</exclude>
                  <exclude>src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java</exclude>
                  <exclude>src/main/java/org/apache/lucene/queryparser/XSimpleQueryParser.java</exclude>
                  <exclude>src/main/java/org/apache/lucene/**/X*.java</exclude>
                  <!-- t-digest -->
                  <exclude>src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestState.java</exclude>
                  <exclude>src/test/java/org/elasticsearch/search/aggregations/metrics/GroupTree.java</exclude>
                </excludes>
              </configuration>
               <!--  <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions> -->
            </plugin>
          </plugins>
        </build>
      </profile>
      <!-- license profile, to generate third party license file -->
      <profile>
        <id>license</id>
        <activation>
          <property>
            <name>license.generation</name>
            <value>true</value>
          </property>
        </activation>
        <!-- not including license-maven-plugin is sufficent to expose default license -->
      </profile>
      <!-- jacoco coverage profile.  This will insert -jagent -->
      <profile>
        <id>coverage</id>
        <activation>
          <property>
            <name>tests.coverage</name>
            <value>true</value>
          </property>
        </activation>
        <dependencies>
          <dependency>
            <!--  must be on the classpath  -->
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <classifier>runtime</classifier>
            <version>0.6.4.201312101107</version>
            <scope>test</scope>
          </dependency>
        </dependencies>
        <build>
          <plugins>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.6.4.201312101107</version>
              <executions>
                <execution>
                  <id>default-prepare-agent</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                </execution>
                <execution>
                  <id>default-report</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>report</goal>
                  </goals>
                </execution>
                <execution>
                  <id>default-check</id>
                  <goals>
                    <goal>check</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <excludes>
                  <exclude>jsr166e/**</exclude>
                  <exclude>org/apache/lucene/**</exclude>
                </excludes>
              </configuration>
            </plugin>
          </plugins>
        </build>
      </profile>
      <profile>
        <id>static</id>
        <activation>
          <property>
            <name>tests.static</name>
            <value>true</value>
          </property>
        </activation>
        <build>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.5.3</version>
            </plugin>
          </plugins>
        </build>
        <reporting>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jxr-plugin</artifactId>
              <version>2.3</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-pmd-plugin</artifactId>
              <version>3.0.1</version>
              <configuration>
                <rulesets>
                  <ruleset>${basedir}/dev-tools/pmd/custom.xml</ruleset>
                </rulesets>
                <targetJdk>1.7</targetJdk>
                <excludes>
                  <exclude>**/jsr166e/**</exclude>
                  <exclude>**/org/apache/lucene/**</exclude>
                  <exclude>**/org/apache/elasticsearch/common/Base64.java</exclude>
                </excludes>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.5.3</version>
              <configuration>
                <xmlOutput>true</xmlOutput>
                <xmlOutputDirectory>target/site</xmlOutputDirectory>
                <fork>true</fork>
                <maxHeap>2048</maxHeap>
                <timeout>1800000</timeout>
                <onlyAnalyze>org.elasticsearch.-</onlyAnalyze>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.7</version>
              <reportSets>
                <reportSet>
                  <reports>
                    <report>index</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>
          </plugins>
        </reporting>
      </profile>
    </profiles>
=======
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                   <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                   </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <package.rpm>true</package.rpm>
                <no.commit.pattern>\bno(n|)(release|commit)\b</no.commit.pattern> <!-- check for no-commit / no-release -->
                <forbidden.test.signatures>org.apache.lucene.util.LuceneTestCase$AwaitsFix @ Please fix all bugs before release or mark them as ignored</forbidden.test.signatures>
            </properties>
            <build>
                <!-- sign the artifacts with GPG -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <keyname>${gpg.keyname}</keyname>
                                    <passphrase>${gpg.passphrase}</passphrase>
                                    <defaultKeyring>${gpg.keyring}</defaultKeyring>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- license profile, to generate third party license file -->
        <profile>
            <id>license</id>
            <activation>
                <property>
                    <name>license.generation</name>
                    <value>true</value>
                </property>
            </activation>
            <!-- not including license-maven-plugin is sufficent to expose default license -->
        </profile>
        <!-- omits noise -->
        <profile>
            <id>pom</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <missing>${basedir}/src/test/java</missing>
                </file>
            </activation>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integ.tests>true</skip.integ.tests>
                <enforcer.skip>true</enforcer.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-heapdump-directory</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>tests-top-hints</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- skips validation checks -->
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                        <executions>
                            <execution>
                                <id>check-forbidden-apis</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>check-forbidden-test-apis</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-license-headers</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-invalid-patterns</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- code coverage build -->
        <profile>
            <id>coverage</id>
            <activation>
                <property>
                    <name>tests.coverage</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- in case activated otherwise -->
                <tests.coverage>true</tests.coverage>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- static analysis -->
        <profile>
            <id>static</id>
            <activation>
                <property>
                    <name>tests.static</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <tests.security.manager>false</tests.security.manager> <!-- security policy doesn't have appropriate permissions for instrumentation -->
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>2.7</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>index</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
    <modules>
        <module>dev-tools</module>
        <module>rest-api-spec</module>
        <module>core</module>
        <module>distribution</module>
        <module>plugins</module>
        <module>qa</module>
    </modules>
>>>>>>> v2.1.1
</project>
